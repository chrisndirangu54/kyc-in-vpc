AWSTemplateFormatVersion: '2010-09-09'
Description: SSH bastion host

Parameters:
  KeyName:
    Type: String

  # VPC:
  #   Type: AWS::EC2::VPC::Id

  SecurityGroup:
    Type: String

  Subnet:
    Type: String

Mappings:
# START_AMIS
  AWSRegionToAMI:
    us-east-2:
      AMI: ami-09a64272e7fe706b6
    us-east-1:
      AMI: ami-0b9a214f40c38d5eb
    us-west-2:
      AMI: ami-00430184c7bb49914
    us-west-1:
      AMI: ami-0e7dd5fe55b87a5fe
    eu-west-3:
      AMI: ami-06b685336aa497c15
    eu-west-2:
      AMI: ami-0209769f0c963e791
    eu-west-1:
      AMI: ami-05b65c0f6a75c1c64
    eu-central-1:
      AMI: ami-0bb804e8cd910a664
    ap-northeast-2:
      AMI: ami-0d947b1901b27a37c
    ap-northeast-1:
      AMI: ami-08681de00a0aae54f
    ap-southeast-2:
      AMI: ami-05b48eda7f92aadbe
    ap-southeast-1:
      AMI: ami-0a3f70f0255af1d29
    ca-central-1:
      AMI: ami-00d1bdbd447b5933a
    ap-south-1:
      AMI: ami-0590d0dd683026eab
    sa-east-1:
      AMI: ami-01bca91ecf4c1f494

# END_AMIS

Resources:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [AWSRegionToAMI, !Ref "AWS::Region", AMI]
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Purpose
          Value: "SSH Bastion Host"
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - !Ref SecurityGroup
          SubnetId: !Ref Subnet
Outputs:
  InstanceId:
    Value: !Ref Instance

  PublicDNSName:
    Value: !GetAtt Instance.PublicDnsName

  PublicIP:
    Value: !GetAtt Instance.PublicIp
